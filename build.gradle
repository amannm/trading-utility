plugins {
    id 'java'
    id 'application'
    id "com.google.osdetector" version "1.6.2"
}

group 'systems.cauldron'
version '1.0-SNAPSHOT'

sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {

    // user interface
    def platform = {
        def os = osdetector.getOs();
        switch (os) {
            case 'windows':
                return 'win'
            case 'osx':
                return 'mac'
            case 'linux':
                return 'linux'
            default:
                new Exception('no OpenJFX distribution available for platform: ' + os)
        }
    }()
    implementation('org.openjfx:javafx-base:16+:' + platform)
    implementation('org.openjfx:javafx-graphics:16+:' + platform)
    implementation('org.openjfx:javafx-controls:16+:' + platform)

    // json processing
    implementation('org.glassfish:javax.json:1+')

    // unit testing
    testImplementation('org.junit.jupiter:junit-jupiter-api:5+')
    testImplementation('org.junit.jupiter:junit-jupiter-params:5+')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5+')

    // logging
    implementation('org.apache.logging.log4j:log4j-api:2+')
    implementation('org.apache.logging.log4j:log4j-core:2+')

    // developer ergonomics
    compileOnly('org.projectlombok:lombok:1+')
    annotationProcessor('org.projectlombok:lombok:1+')
    testCompileOnly('org.projectlombok:lombok:1+')
    testAnnotationProcessor('org.projectlombok:lombok:1+')

}

java {
    modularity.inferModulePath = true
}

application {
    mainModule.set('systems.cauldron.utility.trading')
    mainClass.set('systems.cauldron.utility.trading.Application')
}

jar {
    manifest {
        attributes 'Main-Class': 'systems.cauldron.utility.trading.Application'
    }
}

test {
    useJUnitPlatform()
}